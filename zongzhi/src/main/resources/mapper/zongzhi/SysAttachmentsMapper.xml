<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yuxin.platform.zongzhi.mapper.SysAttachmentsMapper">
    <resultMap id="BaseResultMap" type="com.yuxin.platform.zongzhi.pojo.SysAttachments">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="table_name" property="tableName" jdbcType="VARCHAR"/>
        <result column="table_id" property="tableId" jdbcType="INTEGER"/>
        <result column="file_type" property="fileType" jdbcType="VARCHAR"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="real_path" property="realPath" jdbcType="VARCHAR"/>
        <result column="mark" property="mark" jdbcType="VARCHAR"/>
        <result column="creater" property="creater" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, table_name, table_id, file_type, file_name, real_path, mark, creater, create_date
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachmentsExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_attachments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_attachments
        where id = #{id,jdbcType=INTEGER}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_attachments
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachmentsExample">
        delete from sys_attachments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachments">
        <selectKey  keyProperty="id" resultType="int" order="BEFORE">
            select nvl(max(id),0)+1 from sys_attachments
        </selectKey>
        insert into sys_attachments (id, table_name, table_id,
        file_type, file_name, real_path,
        mark, creater, create_date
        )
        values (#{id,jdbcType=INTEGER}, #{tableName,jdbcType=VARCHAR}, #{tableId,jdbcType=INTEGER},
        #{fileType,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{realPath,jdbcType=VARCHAR},
        #{mark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachments">
        <selectKey  keyProperty="id" resultType="int" order="BEFORE">
            select nvl(max(id),0)+1 from sys_attachments
        </selectKey>
        insert into sys_attachments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="tableName != null">
                table_name,
            </if>
            <if test="tableId != null">
                table_id,
            </if>
            <if test="fileType != null">
                file_type,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="realPath != null">
                real_path,
            </if>
            <if test="mark != null">
                mark,
            </if>
            <if test="creater != null">
                creater,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="tableName != null">
                #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="tableId != null">
                #{tableId,jdbcType=INTEGER},
            </if>
            <if test="fileType != null">
                #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="realPath != null">
                #{realPath,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                #{mark,jdbcType=VARCHAR},
            </if>
            <if test="creater != null">
                #{creater,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachmentsExample"
            resultType="java.lang.Integer">
        select count(*) from sys_attachments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_attachments
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.tableName != null">
                table_name = #{record.tableName,jdbcType=VARCHAR},
            </if>
            <if test="record.tableId != null">
                table_id = #{record.tableId,jdbcType=INTEGER},
            </if>
            <if test="record.fileType != null">
                file_type = #{record.fileType,jdbcType=VARCHAR},
            </if>
            <if test="record.fileName != null">
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.realPath != null">
                real_path = #{record.realPath,jdbcType=VARCHAR},
            </if>
            <if test="record.mark != null">
                mark = #{record.mark,jdbcType=VARCHAR},
            </if>
            <if test="record.creater != null">
                creater = #{record.creater,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_attachments
        set id = #{record.id,jdbcType=INTEGER},
        table_name = #{record.tableName,jdbcType=VARCHAR},
        table_id = #{record.tableId,jdbcType=INTEGER},
        file_type = #{record.fileType,jdbcType=VARCHAR},
        file_name = #{record.fileName,jdbcType=VARCHAR},
        real_path = #{record.realPath,jdbcType=VARCHAR},
        mark = #{record.mark,jdbcType=VARCHAR},
        creater = #{record.creater,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachments">
        update sys_attachments
        <set>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="tableId != null">
                table_id = #{tableId,jdbcType=INTEGER},
            </if>
            <if test="fileType != null">
                file_type = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="realPath != null">
                real_path = #{realPath,jdbcType=VARCHAR},
            </if>
            <if test="mark != null">
                mark = #{mark,jdbcType=VARCHAR},
            </if>
            <if test="creater != null">
                creater = #{creater,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yuxin.platform.zongzhi.pojo.SysAttachments">
        update sys_attachments
        set table_name = #{tableName,jdbcType=VARCHAR},
        table_id = #{tableId,jdbcType=INTEGER},
        file_type = #{fileType,jdbcType=VARCHAR},
        file_name = #{fileName,jdbcType=VARCHAR},
        real_path = #{realPath,jdbcType=VARCHAR},
        mark = #{mark,jdbcType=VARCHAR},
        creater = #{creater,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>